// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["base", "tests"]
}

model User {
  id       String         @id @default(uuid())
  username String
  password String
  groups   GroupsOfUser[]

  @@schema("base")
}

model Groups {
  id            String         @id @default(uuid())
  groupName     String
  levelOfAccess Int
  users         GroupsOfUser[]

  @@schema("base")
}

model Customers {
  id      String   @id @default(uuid())
  name    String
  email   String
  address String
  // relation with orders
  Orders  Orders[]

  @@schema("base")
}

model Products {
  id             String       @id @default(uuid())
  name           String
  description    String
  price_in_cents Int
  // orders         ProductsOfOrder[]
  OrderItems     OrderItems[]

  @@schema("base")
}

model Orders {
  id             String       @id @default(uuid())
  total_in_cents Int
  customer       Customers    @relation(fields: [customerId], references: [id])
  customerId     String
  // products       ProductsOfOrder[]
  OrderItems     OrderItems[]

  // relation with orderItems, Custommers and Distributors
  @@schema("base")
}

model OrderItems {
  id        String   @id @default(uuid())
  quantity  Int      @default(1)
  order     Orders   @relation(fields: [orderId], references: [id])
  orderId   String
  product   Products @relation(fields: [productId], references: [id])
  productId String

  @@schema("base")
}

model Distributor {
  id   String @id @default(uuid())
  name String

  // relation with orders customers and products
  @@schema("base")
}

model GroupsOfUser {
  user       User     @relation(fields: [userId], references: [id])
  userId     String
  groups     Groups   @relation(fields: [groupId], references: [id])
  groupId    String
  assignedAt DateTime @default(now())
  assignedBy String

  @@id([userId, groupId])
  @@schema("base")
}

// model ProductsOfOrder {
//   Products   Products @relation(fields: [productsId], references: [id])
//   productsId String
//   Orders     Orders   @relation(fields: [ordersId], references: [id])
//   ordersId   String
//   quantity   Int      @default(1)

//   @@id([productsId, ordersId])
//   @@schema("base")
// }
